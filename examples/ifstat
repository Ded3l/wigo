#!/usr/bin/perl

use strict;
use warnings;

use Time::HiRes qw/time/;
use FindBin;
use lib "$FindBin::Bin/../../lib";
use Wigo::Probe;

###
# DEFAULT CONFIG
###

my $conf = {
    'match'         => 'eth\d+|em\d+_\d+/\d+|em\d+_\d+|em\d+|p\d+p\d+_\d+/\d+|p\d+p\d+_\d+|p\d+p\d+|tap\d+',
    'fields'        => {
        'bytes'         => { },
        'packets'       => { },
        'errs'          => { 'warn' => 1 },
        'drop'          => { 'warn' => 1 },
    }
};

init( config => $conf );
my $match = '\s+(' . config->{'match'} . '):(.*)';

###
# FETCHING STATS
###

my $now = time;
if( ! open NEW_STATS, '<', '/proc/net/dev' )
{
    status  500;
    message "Error while fetching iface stats: " . $!;
    output 1;
}
my @lines = <NEW_STATS>;
close NEW_STATS;

###
# PARSING STATS
###

my $new = {
    'last_time' => $now,
};

my @metrics;
foreach my $line ( @lines )
{
    if ( $line =~ /$match/o )
    {
        my $iface = $1;
        my @stats = split /\s+/, $2;
        shift @stats;

        my @fields = ( 
            qw/bytes packets errs drop fifo frame compressed multicast/,
            qw/bytes packets errs drop fifo colls carrier compressed/
        );

        my $values = {};
        for my $i ( 0..15 )
        {
            my $direction = $i < 8 ? 'in' : 'out';
            
            $new->{$iface}->{$direction}->{$fields[$i]} = $stats[$i];

            next unless grep { $fields[$i] eq $_ } keys %{config->{'fields'}};
            add_metric { 'Tags' => { 'iface' => $iface, 'direction' => $direction,  'field' => $fields[$i] }, 'Value' => $stats[$i] };
            
            next unless defined persist->{$iface}->{$direction}->{$fields[$i]};
            my $value = ( $stats[$i] - persist->{$iface}->{$direction}->{$fields[$i]} ) / ( $now - ( persist->{'last_time'} || 0 ) );
            $values->{$direction}->{$fields[$i]} = $value;

            if ( config->{'fields'}->{$fields[$i]}->{'warn'} and $value > config->{'fields'}->{$fields[$i]}->{'warn'} )
            {
                raise 200;
            }

            if ( config->{'fields'}->{$fields[$i]}->{'crit'} and $value > config->{'fields'}->{$fields[$i]}->{'crit'} )
            {
                raise 300;
            }
        }

        if ( defined $values->{'in'}->{'bytes'} and defined $values->{'out'}->{'bytes'} )
        {
            result->{'Message'} .= sprintf ( 
                "%s %.2f/%.2f mbps , ", 
                ( $iface, $values->{'in'}->{'bytes'} * 8 / 1024 / 1024 , $values->{'out'}->{'bytes'} * 8 / 1024 / 1024 )
            );
        } 
    }
}

persist $new;
output 0;