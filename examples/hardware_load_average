#!/usr/bin/perl

use strict;
use warnings;


# Init Json
use JSON::XS;
my $coder = JSON::XS->new->pretty;


# Number of cores
my $cores = `grep '^processor' /proc/cpuinfo | sort -u | wc -l`;
chomp $cores;

# Warn levels if cores information isn't available
my $warnLevel       = 1;
my $critLevel       = 2;

# Warn levels in percentage, depending on number of cores
my $warnPercentage  = 75;
my $critPercentage  = 150;

my $return = {
    Version    => "0.11",
    
    Status     => 398,
    Message    => "No results",

    Detail     => "",
};


# Exec
my $fnret = `cat /proc/loadavg`;
chomp($fnret);

if($? != 0)
{
    $return->{'Status'}     = 500;
    $return->{'Message'}    = $fnret . " - " . $!;
}
else
{
    if($fnret =~ /^([\d\.]+)\s([\d\.]+)\s([\d\.]+)/)
    {
        my $rawValue5 = $1;
        my $rawValue10 = $2;
        my $rawValue15 = $3;

        $return->{'Status'}     = 100;
        $return->{'Message'}    = "$rawValue5 $rawValue10 $rawValue15";

        $return->{'Metrics'}    = [
            { Tags => { "load" => "load5" }, Value => $rawValue5 + 0 },
            { Tags => { "load" => "load10" }, Value => $rawValue10 + 0 },
            { Tags => { "load" => "load15" }, Value => $rawValue15 + 0 },
        ];

        if ($cores =~ /^\d+$/)
        {
            my $percentage = $rawValue5 * 100 / $cores;

            if ($percentage > $critPercentage)
            {
                $return->{'Status'} = 300;
            }
            elsif ($percentage > $warnPercentage)
            {
                $return->{'Status'} = 250; 
            }
        }
        else
        {
            if($rawValue5 > $warnLevel)
            {
                $return->{'Status'} = 250;
            }
            if($rawValue5 > $critLevel)
            {
                $return->{'Status'} = 300;
            }
        }
    }
}

print $coder->encode( $return );

