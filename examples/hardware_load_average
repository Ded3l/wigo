#!/usr/bin/perl

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/../../lib";
use Wigo::Probe;

###
# DEFAULT CONFIG
###

my $conf = {
    'toCheck'           => 1,
    'warnPercentage'    => 75,
    'critPercentage'    => 150
};

init( config => $conf );

# Number of cores
my $cores = `grep '^processor' /proc/cpuinfo | sort -u | wc -l`;
chomp $cores;
$cores ||= 1;

if ( ! open LOADAVG, '<', '/proc/loadavg' )
{
    status  500;
    message "Error while fetching loadavg : " . $!;
    output 1;
}
my $loadavg = <LOADAVG>;
close LOADAVG;
chomp $loadavg;

if ( $loadavg =~ /^([\d\.]+)\s([\d\.]+)\s([\d\.]+)/ )
{
    my $rawValue5 = $1;
    my $rawValue10 = $2;
    my $rawValue15 = $3;

    message "$rawValue5 $rawValue10 $rawValue15";

    metrics [
        { Tags => { "load" => "load5" },  Value => $rawValue5 },
        { Tags => { "load" => "load10" }, Value => $rawValue10 },
        { Tags => { "load" => "load15" }, Value => $rawValue15 },
    ];

    my $toCheck;
    if ( config->{'toCheck'} == 2 or config->{'toCheck'} == 10 )
    {
        $toCheck = $rawValue10;
    }
    elsif ( config->{'toCheck'} == 3 or config->{'toCheck'} == 15 )
    {
        $toCheck = $rawValue15;
    }
    else
    {
        $toCheck = $rawValue5;
    }

    my $percentage = $toCheck * 100 / $cores;
    if ( $percentage > config->{'critPercentage'} )
    {
        raise 300;
    }
    elsif ( $percentage > config->{'warnPercentage'} )
    {
        raise 200;
    }
}
else
{
    status 500;
    message "Can't parse loadavg : " . $loadavg;
    output 1;
}

output 0;