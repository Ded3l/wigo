#!/usr/bin/perl

use strict;
use warnings;


# Init Json
use JSON::XS;
my $coder = JSON::XS->new->pretty;


# Warn levels
my $warnLevel   = 75;
my $critLevel   = 90;

my $return = {
    Version    => "0.10",
    
    Status     => 398,
    Message    => "No results",

    Value      => "",
    Detail     => "",
};


# Exec
my @meminfo = `cat /proc/meminfo`;
if($? != 0)
{
    $return->{'Status'}     = 500;
    $return->{'Message'}    = "Error while cating /proc/meminfo: ". $!;
}
else
{
    my %values = map { chomp; $_ =~ /(.*):\s+(.*) [\w]+/ } @meminfo;

    my $realFree         = $values{'MemFree'} + $values{'Cached'} + $values{'Buffers'};
    my $realUsed         = $values{'MemTotal'} - $realFree;
    my $usePercentage    = sprintf( "%.2f", $realUsed * 100 / $values{'MemTotal'});

    $return->{'Detail'}  = \%values;

    $return->{'Status'}  = 100;
    $return->{'Message'} = "Current memory usage is $usePercentage%";
    $return->{'Value'}   = $usePercentage + 0;

    $return->{'Metrics'}->{'Total'} = $values{'MemTotal'} + 0;
    $return->{'Metrics'}->{'Used'}  = $realUsed + 0;
    $return->{'Metrics'}->{'Free'}  = $realFree + 0;

    if($usePercentage > $critLevel)
    {
        $return->{'Status'} = 300;
    }
    elsif($usePercentage > $warnLevel)
    {
        $return->{'Status'} = 250;
    }
}


print $coder->encode( $return );

